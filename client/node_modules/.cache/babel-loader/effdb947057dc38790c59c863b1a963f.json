{"ast":null,"code":"import _objectSpread from \"/home/ghena/www/tech-store/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/ghena/www/tech-store/src/context/context.js\";\nimport React, { Component } from 'react';\nimport { linkData } from './linkData';\nimport { socialData } from './socialData';\nimport { items } from './productData';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sidebarOpen: false,\n      cartOpen: false,\n      cartItems: 0,\n      links: linkData,\n      socialIcons: socialData,\n      cart: [],\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0,\n      storeProducts: [],\n      filteredProducts: [],\n      featuredProducts: [],\n      singleProduct: {},\n      loading: false\n    };\n\n    this.setProducts = products => {\n      let storeProducts = products.map(item => {\n        const id = item.sys.id;\n        const image = item.fields.image.fields.file.url;\n\n        const product = _objectSpread({\n          id\n        }, item.fields, {\n          image\n        });\n\n        return product;\n      });\n      let featuredProducts = storeProducts.filter(item => item.featured === true);\n      this.setState({\n        storeProducts,\n        filteredProducts: storeProducts,\n        featuredProducts,\n        cart: this.getStorageCart(),\n        singleProduct: this.getStorageProduct(),\n        loading: false\n      });\n    };\n\n    this.getStorageCart = () => {\n      return [];\n    };\n\n    this.getStorageProduct = () => {\n      return {};\n    };\n\n    this.getTotals = () => {};\n\n    this.addTotal = () => {};\n\n    this.syncsStorage = () => {};\n\n    this.addToCart = id => {\n      let tempCart = [...this.state.cart];\n      let tempProducts = [...this.state.storeProducts];\n      let tempItem = tempCart.find(item => item.id === id);\n\n      if (!tempItem) {\n        tempItem = tempProducts.find(item => item.id === id);\n        let total = tempItem.price;\n\n        let cartItem = _objectSpread({}, tempItem, {\n          count: 1,\n          total\n        });\n\n        tempCart = [...tempCart, cartItem];\n      } else {\n        tempItem.count++;\n        tempItem.total = tempItem.price * tempItem.count;\n        tempItem.total = parseFloat(tempItem.total.toFixed(2));\n      }\n\n      this.setState(() => {\n        return {\n          cart: tempCart\n        };\n      }, () => {\n        this.addTotals();\n        this.syncsStorage();\n        this.openCart();\n      });\n    };\n\n    this.setSingleProduct = id => {};\n\n    this.handleSidebar = () => {\n      this.setState({\n        sidebarOpen: !this.state.sidebarOpen\n      });\n    };\n\n    this.handleCart = () => {\n      this.setState({\n        cartOpen: !this.state.scartOpen\n      });\n    };\n\n    this.closeCart = () => {\n      this.setState({\n        cartOpen: false\n      });\n    };\n\n    this.openCart = () => {\n      this.setState({\n        cartOpen: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts(items);\n  } //set products\n\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleSidebar: this.handleSidebar,\n        handleCart: this.handleCart,\n        closeCart: this.closeCart,\n        openCart: this.openCart,\n        addToCart: this.addToCart,\n        setSingleProduct: this.setSingleProduct\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/ghena/www/tech-store/src/context/context.js"],"names":["React","Component","linkData","socialData","items","ProductContext","createContext","ProductProvider","state","sidebarOpen","cartOpen","cartItems","links","socialIcons","cart","cartSubTotal","cartTax","cartTotal","storeProducts","filteredProducts","featuredProducts","singleProduct","loading","setProducts","products","map","item","id","sys","image","fields","file","url","product","filter","featured","setState","getStorageCart","getStorageProduct","getTotals","addTotal","syncsStorage","addToCart","tempCart","tempProducts","tempItem","find","total","price","cartItem","count","parseFloat","toFixed","addTotals","openCart","setSingleProduct","handleSidebar","handleCart","scartOpen","closeCart","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { linkData } from './linkData'\nimport { socialData } from './socialData'\nimport { items } from './productData'\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component{\n    state = {\n        sidebarOpen: false,\n        cartOpen: false,\n        cartItems: 0,\n        links: linkData,\n        socialIcons: socialData,\n        cart: [],\n        cartSubTotal: 0,\n        cartTax: 0,\n        cartTotal: 0,\n        storeProducts: [],\n        filteredProducts:[],\n        featuredProducts:[],\n        singleProduct: {},\n        loading: false\n    }\n\n    componentDidMount(){\n        this.setProducts(items);\n    }\n\n    //set products\n    setProducts = products => {\n        let storeProducts = products.map(item =>{\n        const {id} = item.sys;\n        const image = item.fields.image.fields.file.url;\n        const product = {id, ...item.fields, image};\n        return product;\n        });\n        let featuredProducts = storeProducts.filter(item => \n            item.featured ===true);\n        \n        this.setState({\n            storeProducts, \n            filteredProducts:storeProducts,\n            featuredProducts,\n            cart:this.getStorageCart(),\n            singleProduct:this.getStorageProduct(),\n            loading:false\n        });\n    }\n\n    getStorageCart = () => {\n        return [];\n    }\n\n    getStorageProduct = () => {\n        return {};\n    }\n\n    getTotals = () => {}\n\n    addTotal = () => {}\n\n    syncsStorage = () => {}\n\n    addToCart = (id) => {\n        let tempCart = [...this.state.cart];\n        let tempProducts = [...this.state.storeProducts];\n        let tempItem = tempCart.find(item => item.id === id);\n        if(!tempItem) {\n            tempItem = tempProducts.find(item => item.id === id);\n            let total = tempItem.price;\n            let cartItem = {...tempItem, count:1, total};\n            tempCart = [...tempCart, cartItem];\n        }else{\n            tempItem.count++;\n            tempItem.total = tempItem.price * tempItem.count;\n            tempItem.total = parseFloat(tempItem.total.toFixed(2));\n        }\n\n        this.setState(\n            () => {\n                return { cart: tempCart };\n            },\n            () => {\n                this.addTotals();\n                this.syncsStorage();\n                this.openCart();\n            }\n        );\n    }\n\n    setSingleProduct = (id) => {}\n\n\n    //handle sidebar\n    handleSidebar = () => {\n        this.setState({sidebarOpen: !this.state.sidebarOpen})\n    }\n\n    //handle cart\n    handleCart = () => {\n        this.setState({cartOpen: !this.state.scartOpen})\n    }\n\n    //close cart\n    closeCart = () => {\n        this.setState({cartOpen: false})\n    }\n\n    //open cart\n    openCart = () => {\n        this.setState({cartOpen: true})\n    }\n\n    render(){\n        return (\n            <ProductContext.Provider \n                value={{\n                    ...this.state,\n                    handleSidebar: this.handleSidebar,\n                    handleCart: this.handleCart,\n                    closeCart: this.closeCart,\n                    openCart: this.openCart,\n                    addToCart: this.addToCart,\n                    setSingleProduct:this.setSingleProduct  \n                }}\n            >\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };"]},"metadata":{},"sourceType":"module"}