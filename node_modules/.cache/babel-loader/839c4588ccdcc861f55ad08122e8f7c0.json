{"ast":null,"code":"import _objectSpread from \"/home/ghena/www/react-store/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/ghena/www/react-store/src/context/context.js\";\nimport React, { Component } from 'react';\nimport { linkData } from './linkData';\nimport { socialData } from './socialData';\nimport { items } from './productData';\nimport axios from 'axios';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      token: '',\n      login: '',\n      email: '',\n      password: '',\n      repeatPassword: '',\n      firstname: '',\n      lastname: '',\n      resetPasswordInfo: '',\n      sidebarOpen: false,\n      cartOpen: false,\n      cartItems: 0,\n      links: linkData,\n      socialIcons: socialData,\n      cart: [],\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0,\n      storeProducts: [],\n      filteredProducts: [],\n      featuredProducts: [],\n      singleProduct: {},\n      loading: true,\n      search: '',\n      price: 0,\n      min: 0,\n      max: 0,\n      company: 'all',\n      shipping: false\n    };\n\n    this.setProducts = products => {\n      let storeProducts = products.map(item => {\n        const id = item.sys.id;\n        const image = item.fields.image.fields.file.url;\n\n        const product = _objectSpread({\n          id\n        }, item.fields, {\n          image\n        });\n\n        return product;\n      });\n      let featuredProducts = storeProducts.filter(item => item.featured === true);\n      let maxPrice = Math.max(...storeProducts.map(item => item.price));\n      this.setState({\n        storeProducts,\n        filteredProducts: storeProducts,\n        featuredProducts,\n        cart: this.getStorageCart(),\n        singleProduct: this.getStorageProduct(),\n        loading: false,\n        price: maxPrice,\n        max: maxPrice\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.getStorageCart = () => {\n      let cart;\n\n      if (localStorage.getItem('cart')) {\n        cart = JSON.parse(localStorage.getItem('cart'));\n      } else {\n        cart = [];\n      }\n\n      return cart;\n    };\n\n    this.getStorageProduct = () => {\n      return localStorage.getItem('singleProduct') ? JSON.parse(localStorage.getItem('singleProduct')) : {};\n    };\n\n    this.getTotals = () => {\n      let subTotal = 0;\n      let cartItems = 0;\n      this.state.cart.forEach(item => {\n        subTotal += item.total;\n        cartItems += item.count;\n      });\n      subTotal = parseFloat(subTotal.toFixed(2));\n      let tax = subTotal * 0.2;\n      tax = parseFloat(tax.toFixed(2));\n      let total = subTotal + tax;\n      total = parseFloat(total.toFixed(2));\n      return {\n        cartItems,\n        subTotal,\n        tax,\n        total\n      };\n    };\n\n    this.addTotals = () => {\n      const totals = this.getTotals();\n      this.setState({\n        cartItems: totals.cartItems,\n        cartSubTotal: totals.subTotal,\n        cartTax: totals.tax,\n        cartTotal: totals.total\n      });\n    };\n\n    this.syncsStorage = () => {\n      localStorage.setItem('cart', JSON.stringify(this.state.cart));\n    };\n\n    this.addToCart = id => {\n      let tempCart = [...this.state.cart];\n      let tempProducts = [...this.state.storeProducts];\n      let tempItem = tempCart.find(item => item.id === id);\n\n      if (!tempItem) {\n        tempItem = tempProducts.find(item => item.id === id);\n        let total = tempItem.price;\n\n        let cartItem = _objectSpread({}, tempItem, {\n          count: 1,\n          total\n        });\n\n        tempCart = [...tempCart, cartItem];\n      } else {\n        tempItem.count++;\n        tempItem.total = tempItem.price * tempItem.count;\n        tempItem.total = parseFloat(tempItem.total.toFixed(2));\n      }\n\n      this.setState(() => {\n        return {\n          cart: tempCart\n        };\n      }, () => {\n        this.addTotals();\n        this.syncsStorage(); // this.openCart();\n      });\n    };\n\n    this.setSingleProduct = id => {\n      let product = this.state.storeProducts.find(item => item.id === id);\n      localStorage.setItem('singleProduct', JSON.stringify(product));\n      this.setState({\n        singleProduct: _objectSpread({}, product),\n        loading: false\n      });\n    };\n\n    this.handleSidebar = () => {\n      this.setState({\n        sidebarOpen: !this.state.sidebarOpen\n      });\n    };\n\n    this.handleCart = () => {\n      this.setState({\n        cartOpen: !this.state.cartOpen\n      });\n    };\n\n    this.closeCart = () => {\n      this.setState({\n        cartOpen: false\n      });\n    };\n\n    this.openCart = () => {\n      this.setState({\n        cartOpen: true\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const cartItem = tempCart.find(item => item.id === id);\n      cartItem.count++;\n      cartItem.total = cartItem.count * cartItem.price;\n      cartItem.total = parseFloat(cartItem.total.toFixed(2));\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n        this.syncsStorage();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const cartItem = tempCart.find(item => item.id === id);\n\n      if (cartItem.count > 1) {\n        cartItem.count--;\n        cartItem.total = cartItem.count * cartItem.price;\n        cartItem.total = parseFloat(cartItem.total.toFixed(2));\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n          this.syncsStorage();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      this.setState({\n        cart: [...tempCart]\n      }, () => {\n        this.addTotals();\n        this.syncsStorage();\n      });\n    };\n\n    this.clearCart = () => {\n      let tempCart = [...this.state.cart];\n      tempCart = [];\n      this.setState({\n        cart: tempCart\n      }, () => {\n        this.addTotals();\n        this.syncsStorage();\n      });\n    };\n\n    this.handleChange = e => {\n      const name = e.target.name;\n      const value = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n      this.setState({\n        [name]: value\n      }, this.sortData);\n    };\n\n    this.sortData = () => {\n      const _this$state = this.state,\n            storeProducts = _this$state.storeProducts,\n            price = _this$state.price,\n            company = _this$state.company,\n            shipping = _this$state.shipping,\n            search = _this$state.search;\n      let tempPrice = parseInt(price);\n      let tempProducts = [...storeProducts];\n      tempProducts = tempProducts.filter(item => item.price <= tempPrice);\n\n      if (company !== \"all\") {\n        tempProducts = tempProducts.filter(item => item.company === company);\n      }\n\n      if (shipping) {\n        tempProducts = tempProducts.filter(item => item.freeShipping === true);\n      }\n\n      if (search.length > 0) {\n        tempProducts = tempProducts.filter(item => {\n          let tempSearch = search.toLowerCase();\n          let tempTitle = item.title.toLowerCase().slice(0, search.length);\n\n          if (tempSearch === tempTitle) {\n            return item;\n          }\n\n          return false;\n        });\n      }\n\n      this.setState({\n        filteredProducts: tempProducts\n      });\n    };\n\n    this.resetPassword = e => {\n      this.setState({\n        resetPasswordInfo: \"Check your email addres to set a new password!\"\n      });\n    };\n\n    this.logIn = e => {\n      var data = {\n        'email': this.state.email,\n        'password': this.state.password\n      };\n      axios.post('/api/login', data).then(response => {\n        this.setState({\n          token: response.data.token\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.signUp = e => {\n      console.log(this.state); // var token = this.state.token\n      // var config = {\n      //     headers: {\n      //         Authorization: `Bearer ${token}`,\n      //     }\n      // }\n\n      axios.post('/api/login', data, config).then(response => {\n        this.setState({\n          token: response.data.token\n        });\n        console.log(data, response.data.token);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts(items);\n  } //set products\n\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleSidebar: this.handleSidebar,\n        handleCart: this.handleCart,\n        closeCart: this.closeCart,\n        openCart: this.openCart,\n        addToCart: this.addToCart,\n        setSingleProduct: this.setSingleProduct,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart,\n        handleChange: this.handleChange,\n        resetPassword: this.resetPassword,\n        logIn: this.logIn,\n        signUp: this.signUp\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/ghena/www/react-store/src/context/context.js"],"names":["React","Component","linkData","socialData","items","axios","ProductContext","createContext","ProductProvider","state","token","login","email","password","repeatPassword","firstname","lastname","resetPasswordInfo","sidebarOpen","cartOpen","cartItems","links","socialIcons","cart","cartSubTotal","cartTax","cartTotal","storeProducts","filteredProducts","featuredProducts","singleProduct","loading","search","price","min","max","company","shipping","setProducts","products","map","item","id","sys","image","fields","file","url","product","filter","featured","maxPrice","Math","setState","getStorageCart","getStorageProduct","addTotals","localStorage","getItem","JSON","parse","getTotals","subTotal","forEach","total","count","parseFloat","toFixed","tax","totals","syncsStorage","setItem","stringify","addToCart","tempCart","tempProducts","tempItem","find","cartItem","setSingleProduct","handleSidebar","handleCart","closeCart","openCart","increment","decrement","removeItem","clearCart","handleChange","e","name","target","value","type","checked","sortData","tempPrice","parseInt","freeShipping","length","tempSearch","toLowerCase","tempTitle","title","slice","resetPassword","logIn","data","post","then","response","catch","error","console","log","signUp","config","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAGN,KAAK,CAACO,aAAN,EAAvB;;AAEA,MAAMC,eAAN,SAA8BP,SAA9B,CAAuC;AAAA;AAAA;AAAA,SACnCQ,KADmC,GAC3B;AACJC,MAAAA,KAAK,EAAC,EADF;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,QAAQ,EAAE,EAJN;AAKJC,MAAAA,cAAc,EAAC,EALX;AAMJC,MAAAA,SAAS,EAAE,EANP;AAOJC,MAAAA,QAAQ,EAAE,EAPN;AAQJC,MAAAA,iBAAiB,EAAE,EARf;AASJC,MAAAA,WAAW,EAAE,KATT;AAUJC,MAAAA,QAAQ,EAAE,KAVN;AAWJC,MAAAA,SAAS,EAAE,CAXP;AAYJC,MAAAA,KAAK,EAAEnB,QAZH;AAaJoB,MAAAA,WAAW,EAAEnB,UAbT;AAcJoB,MAAAA,IAAI,EAAE,EAdF;AAeJC,MAAAA,YAAY,EAAE,CAfV;AAgBJC,MAAAA,OAAO,EAAE,CAhBL;AAiBJC,MAAAA,SAAS,EAAE,CAjBP;AAkBJC,MAAAA,aAAa,EAAE,EAlBX;AAmBJC,MAAAA,gBAAgB,EAAE,EAnBd;AAoBJC,MAAAA,gBAAgB,EAAE,EApBd;AAqBJC,MAAAA,aAAa,EAAE,EArBX;AAsBJC,MAAAA,OAAO,EAAE,IAtBL;AAuBJC,MAAAA,MAAM,EAAE,EAvBJ;AAwBJC,MAAAA,KAAK,EAAC,CAxBF;AAyBJC,MAAAA,GAAG,EAAC,CAzBA;AA0BJC,MAAAA,GAAG,EAAC,CA1BA;AA2BJC,MAAAA,OAAO,EAAC,KA3BJ;AA4BJC,MAAAA,QAAQ,EAAC;AA5BL,KAD2B;;AAAA,SAsCnCC,WAtCmC,GAsCrBC,QAAQ,IAAI;AACtB,UAAIZ,aAAa,GAAGY,QAAQ,CAACC,GAAT,CAAaC,IAAI,IAAG;AAAA,cACjCC,EADiC,GAC3BD,IAAI,CAACE,GADsB,CACjCD,EADiC;AAExC,cAAME,KAAK,GAAGH,IAAI,CAACI,MAAL,CAAYD,KAAZ,CAAkBC,MAAlB,CAAyBC,IAAzB,CAA8BC,GAA5C;;AACA,cAAMC,OAAO;AAAIN,UAAAA;AAAJ,WAAWD,IAAI,CAACI,MAAhB;AAAwBD,UAAAA;AAAxB,UAAb;;AACA,eAAOI,OAAP;AACC,OALmB,CAApB;AAMA,UAAInB,gBAAgB,GAAGF,aAAa,CAACsB,MAAd,CAAqBR,IAAI,IAC5CA,IAAI,CAACS,QAAL,KAAiB,IADE,CAAvB;AAGA,UAAIC,QAAQ,GAAGC,IAAI,CAACjB,GAAL,CAAS,GAAGR,aAAa,CAACa,GAAd,CAAkBC,IAAI,IAAIA,IAAI,CAACR,KAA/B,CAAZ,CAAf;AAEA,WAAKoB,QAAL,CACI;AACI1B,QAAAA,aADJ;AAEIC,QAAAA,gBAAgB,EAACD,aAFrB;AAGIE,QAAAA,gBAHJ;AAIIN,QAAAA,IAAI,EAAC,KAAK+B,cAAL,EAJT;AAKIxB,QAAAA,aAAa,EAAC,KAAKyB,iBAAL,EALlB;AAMIxB,QAAAA,OAAO,EAAC,KANZ;AAOIE,QAAAA,KAAK,EAACkB,QAPV;AAQIhB,QAAAA,GAAG,EAACgB;AARR,OADJ,EAWI,MAAM;AACF,aAAKK,SAAL;AACH,OAbL;AAeH,KAjEkC;;AAAA,SAmEnCF,cAnEmC,GAmElB,MAAM;AACnB,UAAI/B,IAAJ;;AACA,UAAGkC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAH,EAAgC;AAC5BnC,QAAAA,IAAI,GAAGoC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH,OAFD,MAGI;AACAnC,QAAAA,IAAI,GAAG,EAAP;AACH;;AACD,aAAOA,IAAP;AACH,KA5EkC;;AAAA,SA8EnCgC,iBA9EmC,GA8Ef,MAAM;AACtB,aAAOE,YAAY,CAACC,OAAb,CAAqB,eAArB,IACJC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CADI,GAEL,EAFF;AAGH,KAlFkC;;AAAA,SAoFnCG,SApFmC,GAoFvB,MAAM;AACd,UAAIC,QAAQ,GAAG,CAAf;AACA,UAAI1C,SAAS,GAAG,CAAhB;AACA,WAAKX,KAAL,CAAWc,IAAX,CAAgBwC,OAAhB,CAAwBtB,IAAI,IAAI;AAC5BqB,QAAAA,QAAQ,IAAIrB,IAAI,CAACuB,KAAjB;AACA5C,QAAAA,SAAS,IAAIqB,IAAI,CAACwB,KAAlB;AACH,OAHD;AAKAH,MAAAA,QAAQ,GAAGI,UAAU,CAACJ,QAAQ,CAACK,OAAT,CAAiB,CAAjB,CAAD,CAArB;AACA,UAAIC,GAAG,GAAGN,QAAQ,GAAG,GAArB;AACAM,MAAAA,GAAG,GAAGF,UAAU,CAACE,GAAG,CAACD,OAAJ,CAAY,CAAZ,CAAD,CAAhB;AACA,UAAIH,KAAK,GAAGF,QAAQ,GAAGM,GAAvB;AACAJ,MAAAA,KAAK,GAAGE,UAAU,CAACF,KAAK,CAACG,OAAN,CAAc,CAAd,CAAD,CAAlB;AACA,aAAO;AACH/C,QAAAA,SADG;AAEH0C,QAAAA,QAFG;AAGHM,QAAAA,GAHG;AAIHJ,QAAAA;AAJG,OAAP;AAMH,KAvGkC;;AAAA,SAyGnCR,SAzGmC,GAyGvB,MAAM;AACd,YAAMa,MAAM,GAAG,KAAKR,SAAL,EAAf;AACA,WAAKR,QAAL,CAAc;AACVjC,QAAAA,SAAS,EAAEiD,MAAM,CAACjD,SADR;AAEVI,QAAAA,YAAY,EAAE6C,MAAM,CAACP,QAFX;AAGVrC,QAAAA,OAAO,EAAE4C,MAAM,CAACD,GAHN;AAIV1C,QAAAA,SAAS,EAAC2C,MAAM,CAACL;AAJP,OAAd;AAMH,KAjHkC;;AAAA,SAmHnCM,YAnHmC,GAmHpB,MAAM;AACjBb,MAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6BZ,IAAI,CAACa,SAAL,CAAe,KAAK/D,KAAL,CAAWc,IAA1B,CAA7B;AACH,KArHkC;;AAAA,SAuHnCkD,SAvHmC,GAuHtB/B,EAAD,IAAQ;AAChB,UAAIgC,QAAQ,GAAG,CAAC,GAAG,KAAKjE,KAAL,CAAWc,IAAf,CAAf;AACA,UAAIoD,YAAY,GAAG,CAAC,GAAG,KAAKlE,KAAL,CAAWkB,aAAf,CAAnB;AACA,UAAIiD,QAAQ,GAAGF,QAAQ,CAACG,IAAT,CAAcpC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAlC,CAAf;;AACA,UAAG,CAACkC,QAAJ,EAAc;AACVA,QAAAA,QAAQ,GAAGD,YAAY,CAACE,IAAb,CAAkBpC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAtC,CAAX;AACA,YAAIsB,KAAK,GAAGY,QAAQ,CAAC3C,KAArB;;AACA,YAAI6C,QAAQ,qBAAOF,QAAP;AAAiBX,UAAAA,KAAK,EAAC,CAAvB;AAA0BD,UAAAA;AAA1B,UAAZ;;AACAU,QAAAA,QAAQ,GAAG,CAAC,GAAGA,QAAJ,EAAcI,QAAd,CAAX;AACH,OALD,MAKK;AACDF,QAAAA,QAAQ,CAACX,KAAT;AACAW,QAAAA,QAAQ,CAACZ,KAAT,GAAiBY,QAAQ,CAAC3C,KAAT,GAAiB2C,QAAQ,CAACX,KAA3C;AACAW,QAAAA,QAAQ,CAACZ,KAAT,GAAiBE,UAAU,CAACU,QAAQ,CAACZ,KAAT,CAAeG,OAAf,CAAuB,CAAvB,CAAD,CAA3B;AACH;;AAED,WAAKd,QAAL,CACI,MAAM;AACF,eAAO;AAAE9B,UAAAA,IAAI,EAAEmD;AAAR,SAAP;AACH,OAHL,EAII,MAAM;AACF,aAAKlB,SAAL;AACA,aAAKc,YAAL,GAFE,CAGF;AACH,OARL;AAUH,KAhJkC;;AAAA,SAkJnCS,gBAlJmC,GAkJfrC,EAAD,IAAQ;AACvB,UAAIM,OAAO,GAAG,KAAKvC,KAAL,CAAWkB,aAAX,CAAyBkD,IAAzB,CAA8BpC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAlD,CAAd;AACAe,MAAAA,YAAY,CAACc,OAAb,CAAqB,eAArB,EAAsCZ,IAAI,CAACa,SAAL,CAAexB,OAAf,CAAtC;AACA,WAAKK,QAAL,CAAc;AACVvB,QAAAA,aAAa,oBAAKkB,OAAL,CADH;AAEVjB,QAAAA,OAAO,EAAC;AAFE,OAAd;AAIH,KAzJkC;;AAAA,SA6JnCiD,aA7JmC,GA6JnB,MAAM;AAClB,WAAK3B,QAAL,CAAc;AAACnC,QAAAA,WAAW,EAAE,CAAC,KAAKT,KAAL,CAAWS;AAA1B,OAAd;AACH,KA/JkC;;AAAA,SAkKnC+D,UAlKmC,GAkKtB,MAAM;AACf,WAAK5B,QAAL,CAAc;AAAClC,QAAAA,QAAQ,EAAE,CAAC,KAAKV,KAAL,CAAWU;AAAvB,OAAd;AACH,KApKkC;;AAAA,SAuKnC+D,SAvKmC,GAuKvB,MAAM;AACd,WAAK7B,QAAL,CAAc;AAAClC,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACH,KAzKkC;;AAAA,SA4KnCgE,QA5KmC,GA4KxB,MAAM;AACb,WAAK9B,QAAL,CAAc;AAAClC,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACH,KA9KkC;;AAAA,SAiLnCiE,SAjLmC,GAiLtB1C,EAAD,IAAO;AACf,UAAIgC,QAAQ,GAAG,CAAC,GAAG,KAAKjE,KAAL,CAAWc,IAAf,CAAf;AACA,YAAMuD,QAAQ,GAAGJ,QAAQ,CAACG,IAAT,CAAcpC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAlC,CAAjB;AACAoC,MAAAA,QAAQ,CAACb,KAAT;AACAa,MAAAA,QAAQ,CAACd,KAAT,GAAiBc,QAAQ,CAACb,KAAT,GAAiBa,QAAQ,CAAC7C,KAA3C;AACA6C,MAAAA,QAAQ,CAACd,KAAT,GAAiBE,UAAU,CAACY,QAAQ,CAACd,KAAT,CAAeG,OAAf,CAAuB,CAAvB,CAAD,CAA3B;AACA,WAAKd,QAAL,CAAc,MAAM;AAChB,eAAO;AACH9B,UAAAA,IAAI,EAAC,CAAC,GAAGmD,QAAJ;AADF,SAAP;AAGH,OAJD,EAIE,MAAM;AACA,aAAKlB,SAAL;AACA,aAAKc,YAAL;AACH,OAPL;AASH,KAhMkC;;AAAA,SAmMnCe,SAnMmC,GAmMtB3C,EAAD,IAAO;AACf,UAAIgC,QAAQ,GAAG,CAAC,GAAG,KAAKjE,KAAL,CAAWc,IAAf,CAAf;AACA,YAAMuD,QAAQ,GAAGJ,QAAQ,CAACG,IAAT,CAAcpC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAlC,CAAjB;;AAEA,UAAGoC,QAAQ,CAACb,KAAT,GAAiB,CAApB,EAAuB;AACnBa,QAAAA,QAAQ,CAACb,KAAT;AACAa,QAAAA,QAAQ,CAACd,KAAT,GAAiBc,QAAQ,CAACb,KAAT,GAAiBa,QAAQ,CAAC7C,KAA3C;AACA6C,QAAAA,QAAQ,CAACd,KAAT,GAAiBE,UAAU,CAACY,QAAQ,CAACd,KAAT,CAAeG,OAAf,CAAuB,CAAvB,CAAD,CAA3B;AACA,aAAKd,QAAL,CAAc,MAAM;AAChB,iBAAO;AACH9B,YAAAA,IAAI,EAAC,CAAC,GAAGmD,QAAJ;AADF,WAAP;AAGH,SAJD,EAIE,MAAM;AACA,eAAKlB,SAAL;AACA,eAAKc,YAAL;AACH,SAPL;AASH;AAEJ,KAtNkC;;AAAA,SAyNnCgB,UAzNmC,GAyNrB5C,EAAD,IAAO;AAChB,UAAIgC,QAAQ,GAAG,CAAC,GAAG,KAAKjE,KAAL,CAAWc,IAAf,CAAf;AACAmD,MAAAA,QAAQ,GAAGA,QAAQ,CAACzB,MAAT,CAAgBR,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAApC,CAAX;AACA,WAAKW,QAAL,CAAc;AACN9B,QAAAA,IAAI,EAAC,CAAC,GAAGmD,QAAJ;AADC,OAAd,EAEE,MAAM;AACA,aAAKlB,SAAL;AACA,aAAKc,YAAL;AACH,OALL;AAOH,KAnOkC;;AAAA,SAsOnCiB,SAtOmC,GAsOvB,MAAK;AACb,UAAIb,QAAQ,GAAG,CAAC,GAAG,KAAKjE,KAAL,CAAWc,IAAf,CAAf;AACAmD,MAAAA,QAAQ,GAAG,EAAX;AACA,WAAKrB,QAAL,CAAc;AACV9B,QAAAA,IAAI,EAAEmD;AADI,OAAd,EAEF,MAAM;AACA,aAAKlB,SAAL;AACA,aAAKc,YAAL;AACH,OALD;AAOH,KAhPkC;;AAAA,SAkPnCkB,YAlPmC,GAkPpBC,CAAC,IAAI;AAChB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,YAAME,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASE,IAAT,KAAkB,UAAlB,GAA+BJ,CAAC,CAACE,MAAF,CAASG,OAAxC,GAAkDL,CAAC,CAACE,MAAF,CAASC,KAAzE;AAEA,WAAKvC,QAAL,CAAc;AACV,SAACqC,IAAD,GAAOE;AADG,OAAd,EAII,KAAKG,QAJT;AAMH,KA5PkC;;AAAA,SA8PnCA,QA9PmC,GA8PxB,MAAM;AAAA,0BAC+C,KAAKtF,KADpD;AAAA,YACLkB,aADK,eACLA,aADK;AAAA,YACUM,KADV,eACUA,KADV;AAAA,YACiBG,OADjB,eACiBA,OADjB;AAAA,YAC0BC,QAD1B,eAC0BA,QAD1B;AAAA,YACoCL,MADpC,eACoCA,MADpC;AAEb,UAAIgE,SAAS,GAAGC,QAAQ,CAAChE,KAAD,CAAxB;AAEA,UAAI0C,YAAY,GAAG,CAAC,GAAGhD,aAAJ,CAAnB;AAEAgD,MAAAA,YAAY,GAAGA,YAAY,CAAC1B,MAAb,CAAoBR,IAAI,IAAIA,IAAI,CAACR,KAAL,IAAc+D,SAA1C,CAAf;;AAEA,UAAI5D,OAAO,KAAI,KAAf,EAAuB;AACnBuC,QAAAA,YAAY,GAAGA,YAAY,CAAC1B,MAAb,CAAoBR,IAAI,IAAIA,IAAI,CAACL,OAAL,KAAiBA,OAA7C,CAAf;AACH;;AAED,UAAIC,QAAJ,EAAe;AACXsC,QAAAA,YAAY,GAAGA,YAAY,CAAC1B,MAAb,CAAoBR,IAAI,IAAIA,IAAI,CAACyD,YAAL,KAAsB,IAAlD,CAAf;AACH;;AAED,UAAIlE,MAAM,CAACmE,MAAP,GAAgB,CAApB,EAAwB;AACpBxB,QAAAA,YAAY,GAAGA,YAAY,CAAC1B,MAAb,CAAoBR,IAAI,IAAI;AACvC,cAAI2D,UAAU,GAAGpE,MAAM,CAACqE,WAAP,EAAjB;AACA,cAAIC,SAAS,GAAG7D,IAAI,CAAC8D,KAAL,CAAWF,WAAX,GAAyBG,KAAzB,CAA+B,CAA/B,EAAkCxE,MAAM,CAACmE,MAAzC,CAAhB;;AACA,cAAGC,UAAU,KAAKE,SAAlB,EAA6B;AACzB,mBAAO7D,IAAP;AACH;;AACD,iBAAO,KAAP;AACH,SAPc,CAAf;AAQH;;AAED,WAAKY,QAAL,CAAc;AAACzB,QAAAA,gBAAgB,EAAE+C;AAAnB,OAAd;AACH,KA1RkC;;AAAA,SA4RnC8B,aA5RmC,GA4RnBhB,CAAC,IAAI;AACjB,WAAKpC,QAAL,CAAc;AACVpC,QAAAA,iBAAiB;AADP,OAAd;AAGH,KAhSkC;;AAAA,SAkSnCyF,KAlSmC,GAkS3BjB,CAAC,IAAI;AACT,UAAIkB,IAAI,GAAG;AACP,iBAAS,KAAKlG,KAAL,CAAWG,KADb;AAEP,oBAAW,KAAKH,KAAL,CAAWI;AAFf,OAAX;AAKAR,MAAAA,KAAK,CAACuG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,EACCE,IADD,CACMC,QAAQ,IAAI;AACd,aAAKzD,QAAL,CAAc;AAAC3C,UAAAA,KAAK,EAAEoG,QAAQ,CAACH,IAAT,CAAcjG;AAAtB,SAAd;AACH,OAHD,EAGGqG,KAHH,CAGUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OALD;AAMH,KA9SkC;;AAAA,SAgTnCG,MAhTmC,GAgT1B1B,CAAC,IAAI;AACVwB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzG,KAAjB,EADU,CAGV;AAEA;AACA;AACA;AACA;AACA;;AAEAJ,MAAAA,KAAK,CAACuG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,EAA+BS,MAA/B,EACCP,IADD,CACMC,QAAQ,IAAI;AACd,aAAKzD,QAAL,CAAc;AAAC3C,UAAAA,KAAK,EAAEoG,QAAQ,CAACH,IAAT,CAAcjG;AAAtB,SAAd;AACAuG,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EAAkBG,QAAQ,CAACH,IAAT,CAAcjG,KAAhC;AACH,OAJD,EAIGqG,KAJH,CAIUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAND;AAOH,KAlUkC;AAAA;;AAiCnCK,EAAAA,iBAAiB,GAAE;AACf,SAAK/E,WAAL,CAAiBlC,KAAjB;AACH,GAnCkC,CAqCnC;;;AA+RAkH,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,MAAA,KAAK,oBACE,KAAK7G,KADP;AAEDuE,QAAAA,aAAa,EAAE,KAAKA,aAFnB;AAGDC,QAAAA,UAAU,EAAE,KAAKA,UAHhB;AAIDC,QAAAA,SAAS,EAAE,KAAKA,SAJf;AAKDC,QAAAA,QAAQ,EAAE,KAAKA,QALd;AAMDV,QAAAA,SAAS,EAAE,KAAKA,SANf;AAODM,QAAAA,gBAAgB,EAAC,KAAKA,gBAPrB;AAQDK,QAAAA,SAAS,EAAE,KAAKA,SARf;AASDC,QAAAA,SAAS,EAAE,KAAKA,SATf;AAUDC,QAAAA,UAAU,EAAE,KAAKA,UAVhB;AAWDC,QAAAA,SAAS,EAAG,KAAKA,SAXhB;AAYDC,QAAAA,YAAY,EAAE,KAAKA,YAZlB;AAaDiB,QAAAA,aAAa,EAAE,KAAKA,aAbnB;AAcDC,QAAAA,KAAK,EAAE,KAAKA,KAdX;AAeDS,QAAAA,MAAM,EAAE,KAAKA;AAfZ,QADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAmBK,KAAKI,KAAL,CAAWC,QAnBhB,CADJ;AAuBH;;AA5VkC;;AA+VvC,MAAMC,eAAe,GAAGnH,cAAc,CAACoH,QAAvC;AAEA,SAASlH,eAAT,EAA0BiH,eAA1B","sourcesContent":["import React, { Component } from 'react'\nimport { linkData } from './linkData'\nimport { socialData } from './socialData'\nimport { items } from './productData'\nimport axios from 'axios'\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component{\n    state = {\n        token:'',\n        login: '',\n        email: '',\n        password: '',\n        repeatPassword:'',\n        firstname: '',\n        lastname: '',\n        resetPasswordInfo: '',\n        sidebarOpen: false,\n        cartOpen: false,\n        cartItems: 0,\n        links: linkData,\n        socialIcons: socialData,\n        cart: [],\n        cartSubTotal: 0,\n        cartTax: 0,\n        cartTotal: 0,\n        storeProducts: [],\n        filteredProducts: [],\n        featuredProducts: [],\n        singleProduct: {},\n        loading: true,\n        search: '',\n        price:0,\n        min:0,\n        max:0,\n        company:'all',\n        shipping:false\n\n    }\n\n    componentDidMount(){\n        this.setProducts(items);\n    }\n\n    //set products\n    setProducts = products => {\n        let storeProducts = products.map(item =>{\n        const {id} = item.sys;\n        const image = item.fields.image.fields.file.url;\n        const product = {id, ...item.fields, image};\n        return product;\n        });\n        let featuredProducts = storeProducts.filter(item => \n            item.featured ===true);\n        \n        let maxPrice = Math.max(...storeProducts.map(item => item.price));\n\n        this.setState(\n            {\n                storeProducts, \n                filteredProducts:storeProducts,\n                featuredProducts,\n                cart:this.getStorageCart(),\n                singleProduct:this.getStorageProduct(),\n                loading:false,\n                price:maxPrice,\n                max:maxPrice,\n            },\n            () => { \n                this.addTotals(); \n            }\n        );\n    }\n\n    getStorageCart = () => {\n        let cart;\n        if(localStorage.getItem('cart')){\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n        else{\n            cart = [];\n        }\n        return cart;\n    }\n\n    getStorageProduct = () => {\n        return localStorage.getItem('singleProduct') \n        ?  JSON.parse(localStorage.getItem('singleProduct')) \n        : {};\n    }\n\n    getTotals = () => {\n        let subTotal = 0;\n        let cartItems = 0;\n        this.state.cart.forEach(item => {\n            subTotal += item.total;\n            cartItems += item.count;\n        });\n\n        subTotal = parseFloat(subTotal.toFixed(2));\n        let tax = subTotal * 0.2;\n        tax = parseFloat(tax.toFixed(2));\n        let total = subTotal + tax;\n        total = parseFloat(total.toFixed(2));\n        return {\n            cartItems,\n            subTotal,\n            tax,\n            total\n        };\n    }\n\n    addTotals = () => {\n        const totals = this.getTotals();\n        this.setState({\n            cartItems: totals.cartItems,\n            cartSubTotal: totals.subTotal,\n            cartTax: totals.tax,\n            cartTotal:totals.total\n        })\n    }\n\n    syncsStorage = () => {\n        localStorage.setItem('cart', JSON.stringify(this.state.cart));\n    }\n\n    addToCart = (id) => {\n        let tempCart = [...this.state.cart];\n        let tempProducts = [...this.state.storeProducts];\n        let tempItem = tempCart.find(item => item.id === id);\n        if(!tempItem) {\n            tempItem = tempProducts.find(item => item.id === id);\n            let total = tempItem.price;\n            let cartItem = {...tempItem, count:1, total};\n            tempCart = [...tempCart, cartItem];\n        }else{\n            tempItem.count++;\n            tempItem.total = tempItem.price * tempItem.count;\n            tempItem.total = parseFloat(tempItem.total.toFixed(2));\n        }\n\n        this.setState(\n            () => {\n                return { cart: tempCart };\n            },\n            () => {\n                this.addTotals();\n                this.syncsStorage();\n                // this.openCart();\n            }\n        );\n    }\n\n    setSingleProduct = (id) => {\n        let product = this.state.storeProducts.find(item => item.id === id);\n        localStorage.setItem('singleProduct', JSON.stringify(product));\n        this.setState({\n            singleProduct:{...product},\n            loading:false,\n        })\n    }\n\n\n    //handle sidebar\n    handleSidebar = () => {\n        this.setState({sidebarOpen: !this.state.sidebarOpen})\n    }\n\n    //handle cart\n    handleCart = () => {\n        this.setState({cartOpen: !this.state.cartOpen})\n    }\n\n    //close cart\n    closeCart = () => {\n        this.setState({cartOpen: false})\n    }\n\n    //open cart\n    openCart = () => {\n        this.setState({cartOpen: true})\n    }\n    //cart functionality\n    // increment\n    increment = (id) =>{\n        let tempCart = [...this.state.cart];\n        const cartItem = tempCart.find(item => item.id === id);\n        cartItem.count++;\n        cartItem.total = cartItem.count * cartItem.price;\n        cartItem.total = parseFloat(cartItem.total.toFixed(2));\n        this.setState(() => {\n            return {\n                cart:[...tempCart]\n            }\n        },() => {\n                this.addTotals();\n                this.syncsStorage();\n            }\n        )\n    }\n    \n    //dencrement\n    decrement = (id) =>{\n        let tempCart = [...this.state.cart];\n        const cartItem = tempCart.find(item => item.id === id);\n\n        if(cartItem.count > 1) {\n            cartItem.count--;\n            cartItem.total = cartItem.count * cartItem.price;\n            cartItem.total = parseFloat(cartItem.total.toFixed(2));\n            this.setState(() => {\n                return {\n                    cart:[...tempCart]\n                }\n            },() => {\n                    this.addTotals();\n                    this.syncsStorage();\n                }\n            )\n        }\n        \n    }\n\n    //remove item\n    removeItem = (id) =>{\n        let tempCart = [...this.state.cart];\n        tempCart = tempCart.filter(item => item.id !== id);\n        this.setState({\n                cart:[...tempCart]\n        },() => {\n                this.addTotals();\n                this.syncsStorage();\n            }\n        );\n    }\n\n    //empty cart\n    clearCart = () =>{\n        let tempCart = [...this.state.cart];\n        tempCart = [];\n        this.setState({\n            cart: tempCart\n    },() => {\n            this.addTotals();\n            this.syncsStorage();\n        }\n    );\n    }\n\n    handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n\n        this.setState({\n            [name]:value,\n\n        },\n            this.sortData\n        );\n    }\n\n    sortData = () => {\n        const { storeProducts, price, company, shipping, search } = this.state;\n        let tempPrice = parseInt(price);\n\n        let tempProducts = [...storeProducts];\n        \n        tempProducts = tempProducts.filter(item => item.price <= tempPrice);\n\n        if( company !==\"all\" ) {\n            tempProducts = tempProducts.filter(item => item.company === company);\n        }\n\n        if( shipping ) {\n            tempProducts = tempProducts.filter(item => item.freeShipping === true);\n        }\n\n        if( search.length > 0 ) {\n            tempProducts = tempProducts.filter(item => {\n                let tempSearch = search.toLowerCase();\n                let tempTitle = item.title.toLowerCase().slice(0, search.length);\n                if(tempSearch === tempTitle) {\n                    return item;\n                }\n                return false;\n            })\n        }\n\n        this.setState({filteredProducts: tempProducts});\n    }\n\n    resetPassword = e => {\n        this.setState({\n            resetPasswordInfo: `Check your email addres to set a new password!`\n        })\n    }\n\n    logIn = e => {\n        var data = {\n            'email': this.state.email,\n            'password':this.state.password\n        }\n\n        axios.post('/api/login', data)\n        .then(response => {\n            this.setState({token: response.data.token})\n        }).catch((error) => {\n            console.log(error)\n        });\n    }\n\n    signUp = e => {\n        console.log(this.state)\n\n        // var token = this.state.token\n\n        // var config = {\n        //     headers: {\n        //         Authorization: `Bearer ${token}`,\n        //     }\n        // }\n\n        axios.post('/api/login', data, config)\n        .then(response => {\n            this.setState({token: response.data.token})\n            console.log(data ,response.data.token);\n        }).catch((error) => {\n            console.log(error)\n        });\n    }\n\n    render(){\n        return (\n            <ProductContext.Provider \n                value={{\n                    ...this.state,\n                    handleSidebar: this.handleSidebar,\n                    handleCart: this.handleCart,\n                    closeCart: this.closeCart,\n                    openCart: this.openCart,\n                    addToCart: this.addToCart,\n                    setSingleProduct:this.setSingleProduct,\n                    increment: this.increment,\n                    decrement: this.decrement,\n                    removeItem: this.removeItem,\n                    clearCart : this.clearCart,\n                    handleChange: this.handleChange,\n                    resetPassword: this.resetPassword,\n                    logIn: this.logIn,\n                    signUp: this.signUp\n                }}\n            >\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };"]},"metadata":{},"sourceType":"module"}