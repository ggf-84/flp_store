{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/ghena/www/tech-store/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/ghena/www/tech-store/src/components/Hero.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: fixed;\\n  top:60px;\\n  right:0;\\n  width:100%;\\n  height:100% ;\\n  background: var(--mainGrey);\\n  z-index: 1;\\n  border-left:4px solid var(--primaryColor);\\n  transition: var(--mainTransition);\\n  transform: \", \";\\n\\n  @media (min-width: 567px) {\\n    width:20rem;\\n  }\\n\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport mainBcg from '../images/mainBcg.jpeg';\nexport default function Hero({\n  img,\n  title,\n  max,\n  children\n}) {\n  return React.createElement(HeroWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, children);\n}\nconst HeroWrapper = styled.nav(_templateObject(), props => props.show ? \"translateX(0)\" : \"translateX(100%)\");","map":{"version":3,"sources":["/home/ghena/www/tech-store/src/components/Hero.js"],"names":["React","styled","mainBcg","Hero","img","title","max","children","HeroWrapper","nav","props","show"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,GAAD;AAAMC,EAAAA,KAAN;AAAaC,EAAAA,GAAb;AAAkBC,EAAAA;AAAlB,CAAd,EAA2C;AACxD,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECA,QAFD,CADF;AAKD;AAED,MAAMC,WAAW,GAAGP,MAAM,CAACQ,GAAV,oBAUFC,KAAK,IAAKA,KAAK,CAACC,IAAN,GAAa,eAAb,GAA+B,kBAVvC,CAAjB","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport mainBcg from '../images/mainBcg.jpeg'\n\nexport default function Hero({img, title, max, children}) {\n  return (\n    <HeroWrapper>\n    \n    {children}</HeroWrapper>\n  )\n}\n\nconst HeroWrapper = styled.nav`\n  position: fixed;\n  top:60px;\n  right:0;\n  width:100%;\n  height:100% ;\n  background: var(--mainGrey);\n  z-index: 1;\n  border-left:4px solid var(--primaryColor);\n  transition: var(--mainTransition);\n  transform: ${props => (props.show ? \"translateX(0)\" : \"translateX(100%)\")};\n\n  @media (min-width: 567px) {\n    width:20rem;\n  }\n\n`;"]},"metadata":{},"sourceType":"module"}